[{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"http://rladies.org/spellbind/articles/social_media.html","id":"httpswww-linkedin-comdeveloperstoolsoauthtoken-generator","dir":"Articles","previous_headings":"","what":"https://www.linkedin.com/developers/tools/oauth/token-generator","title":"Social Media functions","text":"","code":"library(spellbind)"},{"path":"http://rladies.org/spellbind/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Athanasia Mo Mowinckel. Author, maintainer.","code":""},{"path":"http://rladies.org/spellbind/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mowinckel (2025). spellbind: Internal R-Ladies Global Helper Package. R package version 0.0.0.9000, http://rladies.org/spellbind/.","code":"@Manual{,   title = {spellbind: Internal R-Ladies Global Helper Package},   author = {Athanasia Mo Mowinckel},   year = {2025},   note = {R package version 0.0.0.9000},   url = {http://rladies.org/spellbind/}, }"},{"path":"http://rladies.org/spellbind/index.html","id":"spellbind-","dir":"","previous_headings":"","what":"Internal R-Ladies Global Helper Package","title":"Internal R-Ladies Global Helper Package","text":"goal spellbind …","code":""},{"path":"http://rladies.org/spellbind/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Internal R-Ladies Global Helper Package","text":"can install development version spellbind GitHub :","code":"# install.packages(\"pak\") pak::pak(\"rladies/spellbind\")"},{"path":"http://rladies.org/spellbind/reference/cast_announce_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Announce a Blog Post Across Multiple Platforms — cast_announce_post","title":"Announce a Blog Post Across Multiple Platforms — cast_announce_post","text":"announce_post function automates task announcing blog post. extracts metadata post's YAML front matter, generates relevant messages, posts announcements various platforms: Bluesky, LinkedIn, Mastodon, via newsletter.","code":""},{"path":"http://rladies.org/spellbind/reference/cast_announce_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Announce a Blog Post Across Multiple Platforms — cast_announce_post","text":"","code":"cast_announce_post(post)"},{"path":"http://rladies.org/spellbind/reference/cast_announce_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Announce a Blog Post Across Multiple Platforms — cast_announce_post","text":"post character vector length one, representing file path blog post. function supports single file path uses first value provided one.","code":""},{"path":"http://rladies.org/spellbind/reference/cast_announce_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Announce a Blog Post Across Multiple Platforms — cast_announce_post","text":"function explicitly return value (NULL). performs side effects creating posts external platforms sending newsletter.","code":""},{"path":"http://rladies.org/spellbind/reference/cast_announce_post.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Announce a Blog Post Across Multiple Platforms — cast_announce_post","text":"Checks post argument provided raises errors warnings needed. Reads YAML front matter blog post extract metadata tags, slug, image, additional fields used announcements. Converts tags hashtag-based format. Constructs shortened URL blog post based slug. Posts announcement : Bluesky: Posts truncated message along image. LinkedIn: Posts full summary along image. Mastodon: Posts SEO description, image, alternative text. Sends metadata generate newsletter notification.","code":""},{"path":"http://rladies.org/spellbind/reference/cast_announce_post.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Announce a Blog Post Across Multiple Platforms — cast_announce_post","text":"","code":"if (FALSE) { # \\dontrun{ post <- \"blog/post/2023-10-05-my-blog-post/index.md\" announce_post(post) } # }"},{"path":"http://rladies.org/spellbind/reference/cast_send_newsletter.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a Newsletter Using ConvertKit API — cast_send_newsletter","title":"Send a Newsletter Using ConvertKit API — cast_send_newsletter","text":"send_newsletter function sends newsletter created using metadata extracted blog post's front matter. communicates ConvertKit API create schedule email broadcast.","code":""},{"path":"http://rladies.org/spellbind/reference/cast_send_newsletter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a Newsletter Using ConvertKit API — cast_send_newsletter","text":"","code":"cast_send_newsletter(frontmatter, url)"},{"path":"http://rladies.org/spellbind/reference/cast_send_newsletter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a Newsletter Using ConvertKit API — cast_send_newsletter","text":"frontmatter named list containing metadata extracted blog post YAML. list include following fields: seo string containing SEO description blog post. image string relative path blog post's thumbnail image. title string containing blog post's title. url Character, url post.","code":""},{"path":"http://rladies.org/spellbind/reference/cast_send_newsletter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send a Newsletter Using ConvertKit API — cast_send_newsletter","text":"function explicitly return value (NULL). performs side effect sending newsletter ConvertKit API.","code":""},{"path":"http://rladies.org/spellbind/reference/cast_send_newsletter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Send a Newsletter Using ConvertKit API — cast_send_newsletter","text":"function generates HTML content newsletter using glue package (placeholders custom templates need defined). constructs HTTP POST request ConvertKit API, passing various fields email subject, thumbnail_url, content. API key authentication fetched environment variable KIT_SECRET.","code":""},{"path":"http://rladies.org/spellbind/reference/cast_send_newsletter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send a Newsletter Using ConvertKit API — cast_send_newsletter","text":"","code":"if (FALSE) { # \\dontrun{ # Example frontmatter frontmatter <- list(   seo = \"This is an amazing blog post about R programming!\",   image = \"images/blog-thumbnail.jpg\",   title = \"Learning R Programming\" )  # Sending a newsletter send_newsletter(frontmatter) } # }"},{"path":"http://rladies.org/spellbind/reference/create_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Formatted Announcement Message — create_message","title":"Create a Formatted Announcement Message — create_message","text":"create_message function generates formatted message string using information blog post's metadata, including title, custom text, randomly selected emoji, URL, associated tags.","code":""},{"path":"http://rladies.org/spellbind/reference/create_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Formatted Announcement Message — create_message","text":"","code":"create_message(frontmatter, uri)"},{"path":"http://rladies.org/spellbind/reference/create_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Formatted Announcement Message — create_message","text":"frontmatter list yaml section uri url post","code":""},{"path":"http://rladies.org/spellbind/reference/create_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Formatted Announcement Message — create_message","text":"character string containing formatted message, includes: Title title blog post. Emoji randomly generated emoji add personality message. Text input text, passed entirety. URL link blog post. Tags Hashtags derived blog's metadata.","code":""},{"path":"http://rladies.org/spellbind/reference/create_message.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Formatted Announcement Message — create_message","text":"function uses glue package assemble string placeholders pre-defined variables, including blog post title, emoji, URI, tags. variables exist global environment accessible scope function called.","code":""},{"path":"http://rladies.org/spellbind/reference/create_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Formatted Announcement Message — create_message","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming variables are defined in # the global environment: frontmatter <- list(   title = \"Learning R Programming\" ) emoji <- \"\\U0001F525\" uri <- \"https://example.com/a-blog-post\" tags <- \"#RStats #DataScience\"  # Create a message create_message(\"Check out this insightful blog post!\") } # }"},{"path":"http://rladies.org/spellbind/reference/li_client.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an OAuth Client for LinkedIn API — li_client","title":"Create an OAuth Client for LinkedIn API — li_client","text":"li_client function initializes OAuth client authenticate interact LinkedIn API. uses environment variables retrieve LinkedIn application credentials (client ID client secret).","code":""},{"path":"http://rladies.org/spellbind/reference/li_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an OAuth Client for LinkedIn API — li_client","text":"","code":"li_client()"},{"path":"http://rladies.org/spellbind/reference/li_client.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an OAuth Client for LinkedIn API — li_client","text":"OAuth client object class httr2_request can used authenticate make requests LinkedIn API.","code":""},{"path":"http://rladies.org/spellbind/reference/li_client.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an OAuth Client for LinkedIn API — li_client","text":"function uses httr2::oauth_client function create OAuth client LinkedIn. following environment variables must set: LI_CLIENT_ID LinkedIn application client ID. LI_CLIENT_SECRET LinkedIn application client secret.","code":""},{"path":"http://rladies.org/spellbind/reference/li_client.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an OAuth Client for LinkedIn API — li_client","text":"","code":"if (FALSE) { # \\dontrun{ # Create an OAuth client for LinkedIn client <- li_client()  client } # }"},{"path":"http://rladies.org/spellbind/reference/li_get_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the LinkedIn Version Date in YYYYMM Format — li_get_version","title":"Get the LinkedIn Version Date in YYYYMM Format — li_get_version","text":"li_get_version function calculates recent past month's LinkedIn version date formats string YYYYMM format. date used reference LinkedIn-specific API versions functionalities tied monthly updates.","code":""},{"path":"http://rladies.org/spellbind/reference/li_get_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the LinkedIn Version Date in YYYYMM Format — li_get_version","text":"","code":"li_get_version()"},{"path":"http://rladies.org/spellbind/reference/li_get_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the LinkedIn Version Date in YYYYMM Format — li_get_version","text":"character string representing version date YYYYMM format, YYYY 4-digit year, MM 2-digit month.","code":""},{"path":"http://rladies.org/spellbind/reference/li_get_version.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the LinkedIn Version Date in YYYYMM Format — li_get_version","text":"function calculates version date taking current date rolling back previous month. result formatted string YYYYMM format using lubridate stringr packages.","code":""},{"path":"http://rladies.org/spellbind/reference/li_get_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the LinkedIn Version Date in YYYYMM Format — li_get_version","text":"","code":"if (FALSE) { # \\dontrun{ li_get_version()  # Store the version date in a variable li_get_version() } # }"},{"path":"http://rladies.org/spellbind/reference/li_media_upload.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload Media to LinkedIn — li_media_upload","title":"Upload Media to LinkedIn — li_media_upload","text":"li_media_upload function uploads media file (e.g., image) LinkedIn use posts content. first initializes upload process LinkedIn’s API, uploads media file provided upload URL.","code":""},{"path":"http://rladies.org/spellbind/reference/li_media_upload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload Media to LinkedIn — li_media_upload","text":"","code":"li_media_upload(author, media)"},{"path":"http://rladies.org/spellbind/reference/li_media_upload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload Media to LinkedIn — li_media_upload","text":"author character string representing LinkedIn profile organization ID format urn:li:person:XXXX urn:li:organization:XXXX. identifies owner media uploaded. media character string representing file path media (e.g., image file) uploaded.","code":""},{"path":"http://rladies.org/spellbind/reference/li_media_upload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload Media to LinkedIn — li_media_upload","text":"character string representing LinkedIn image URL can used reference uploaded media subsequent API calls.","code":""},{"path":"http://rladies.org/spellbind/reference/li_media_upload.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upload Media to LinkedIn — li_media_upload","text":"function performs following steps: Initializes media upload sending request LinkedIn API. Extracts uploadUrl response, specifies upload media file. Uploads media file uploadUrl. Returns image URL generated LinkedIn referencing uploaded file. li_req() function, assumed create authenticated LinkedIn API request, must available calling environment.","code":""},{"path":"http://rladies.org/spellbind/reference/li_media_upload.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload Media to LinkedIn — li_media_upload","text":"","code":"if (FALSE) { # \\dontrun{ # Assign LinkedIn author and media to upload author <- \"urn:li:person:123456789\" media <- \"path/to/image.png\"  # Upload the media file image_url <- li_media_upload(author, media)  # Use the returned image URL in a post image_url } # }"},{"path":"http://rladies.org/spellbind/reference/li_oauth.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform LinkedIn OAuth Authentication — li_oauth","title":"Perform LinkedIn OAuth Authentication — li_oauth","text":"li_oauth function facilitates OAuth 2.0 authentication interacting LinkedIn API. uses authorization code flow generate OAuth token.","code":""},{"path":"http://rladies.org/spellbind/reference/li_oauth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform LinkedIn OAuth Authentication — li_oauth","text":"","code":"li_oauth()"},{"path":"http://rladies.org/spellbind/reference/li_oauth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform LinkedIn OAuth Authentication — li_oauth","text":"OAuth token object (class httr2_token) can used authenticate subsequent API requests LinkedIn.","code":""},{"path":"http://rladies.org/spellbind/reference/li_oauth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform LinkedIn OAuth Authentication — li_oauth","text":"function performs following steps: Calls li_client() initialize OAuth client using LinkedIn client ID secret (stored environment variables: LI_CLIENT_ID LI_CLIENT_SECRET). Constructs authorization URL required state, scope, client details. Executes authorization code flow using httr2::oauth_flow_auth_code, : Prompts user allow access. Supports redirection http://localhost:1444/ complete authorization process. Specifies required LinkedIn permissions (scope): email, openid, profile, w_member_social.","code":""},{"path":"http://rladies.org/spellbind/reference/li_oauth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform LinkedIn OAuth Authentication — li_oauth","text":"","code":"if (FALSE) { # \\dontrun{ # Perform LinkedIn OAuth authentication and save the token token <- li_oauth()  # Use the token for authenticated API requests token } # }"},{"path":"http://rladies.org/spellbind/reference/li_post_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and Publish a LinkedIn Post — li_post_write","title":"Create and Publish a LinkedIn Post — li_post_write","text":"function publishes new post LinkedIn using specified author, text content, optional image, associated image alt text. supports adding media attachments retries requests transient errors.","code":""},{"path":"http://rladies.org/spellbind/reference/li_post_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and Publish a LinkedIn Post — li_post_write","text":"","code":"li_post_write(author, text, image = NULL, image_alt = \"\")"},{"path":"http://rladies.org/spellbind/reference/li_post_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and Publish a LinkedIn Post — li_post_write","text":"author string representing unique LinkedIn author URN (Uniform Resource Name). text string representing textual content LinkedIn post. text escaped ensure LinkedIn compatibility. image (Optional) string representing file path image attached post. Defaults NULL image included. image_alt (Optional) string representing alternate text image (e.g., accessibility). Defaults empty string \"\".","code":""},{"path":"http://rladies.org/spellbind/reference/li_post_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and Publish a LinkedIn Post — li_post_write","text":"Invisibly returns LinkedIn post ID string. Displays message LinkedIn URL published post.","code":""},{"path":"http://rladies.org/spellbind/reference/li_post_write.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create and Publish a LinkedIn Post — li_post_write","text":"image provided, function automatically uploads image LinkedIn using li_media_upload() helper function (defined ). post configured public visibility main feed distribution. Error retries applied certain HTTP status codes.","code":""},{"path":"http://rladies.org/spellbind/reference/li_post_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and Publish a LinkedIn Post — li_post_write","text":"","code":"if (FALSE) { # \\dontrun{ # Publish a simple text post: li_post_write(   author = \"urn:li:person:exampleAuthor\",   text = \"This is a simple LinkedIn post!\" )  # Publish a post with an image: li_post_write(   author = \"urn:li:person:exampleAuthor\",   text = \"Check out this image!\",   image = \"path/to/image.jpg\",   image_alt = \"A description of the image for accessibility\" ) } # }"},{"path":"http://rladies.org/spellbind/reference/li_req.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Base LinkedIn API Request — li_req","title":"Create a Base LinkedIn API Request — li_req","text":"function creates pre-configured HTTP request object interacting LinkedIn API. sets API endpoint version, essential headers, includes authentication.","code":""},{"path":"http://rladies.org/spellbind/reference/li_req.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Base LinkedIn API Request — li_req","text":"","code":"li_req(endpoint_version = \"rest\", ...)"},{"path":"http://rladies.org/spellbind/reference/li_req.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Base LinkedIn API Request — li_req","text":"endpoint_version string specifying LinkedIn API endpoint version. Defaults \"rest\". possible values include \"v2\" specific API versions. ... Additional arguments passed li_req_auth() function authentication configuration.","code":""},{"path":"http://rladies.org/spellbind/reference/li_req.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Base LinkedIn API Request — li_req","text":"HTTP request object default headers authentication configured, can used httr2 methods perform API queries.","code":""},{"path":"http://rladies.org/spellbind/reference/li_req.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Base LinkedIn API Request — li_req","text":"function initializes request targeting LinkedIn API's base URL (https://api.linkedin.com) appends specified endpoint version URL path. sets headers API versioning, protocol compatibility, Content-Type. Authentication handled li_req_auth().","code":""},{"path":"http://rladies.org/spellbind/reference/li_req.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Base LinkedIn API Request — li_req","text":"","code":"if (FALSE) { # \\dontrun{ # Create a request with default settings req <- li_req()  # Create a request object req <- li_req(     endpoint_version = \"v2\",     token = Sys.getenv(\"LI_TOKEN\") ) } # }"},{"path":"http://rladies.org/spellbind/reference/li_urn_me.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the LinkedIn URN of the User — li_urn_me","title":"Retrieve the LinkedIn URN of the User — li_urn_me","text":"function fetches LinkedIn Uniform Resource Name (URN) currently authenticated user using LinkedIn API. Authentication performed using bearer token stored LI_TOKEN environment variable.","code":""},{"path":"http://rladies.org/spellbind/reference/li_urn_me.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the LinkedIn URN of the User — li_urn_me","text":"","code":"li_urn_me()"},{"path":"http://rladies.org/spellbind/reference/li_urn_me.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the LinkedIn URN of the User — li_urn_me","text":"string representing user's LinkedIn URN format \"urn:li:person:{id}\".","code":""},{"path":"http://rladies.org/spellbind/reference/li_urn_me.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve the LinkedIn URN of the User — li_urn_me","text":"function sends API request LinkedIn userinfo endpoint appropriate authorization token extracts user's unique identifier (sub). identifier formatted LinkedIn URN.","code":""},{"path":"http://rladies.org/spellbind/reference/li_urn_me.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the LinkedIn URN of the User — li_urn_me","text":"","code":"if (FALSE) { # \\dontrun{ li_urn_me() } # }"},{"path":"http://rladies.org/spellbind/reference/random_emoji.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Random Emoji — random_emoji","title":"Generate a Random Emoji — random_emoji","text":"random_emoji function selects returns random emoji predefined list emojis. function often used add personality fun messages announcements.","code":""},{"path":"http://rladies.org/spellbind/reference/random_emoji.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Random Emoji — random_emoji","text":"","code":"random_emoji()"},{"path":"http://rladies.org/spellbind/reference/random_emoji.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Random Emoji — random_emoji","text":"single character string containing randomly selected emoji.","code":""},{"path":"http://rladies.org/spellbind/reference/random_emoji.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Random Emoji — random_emoji","text":"function draws fixed list commonly used emojis. time function called, selects one emoji random returns . input parameters required.","code":""},{"path":"http://rladies.org/spellbind/reference/random_emoji.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Random Emoji — random_emoji","text":"","code":"# Generate a random emoji random_emoji() #> [1] \"🔧\""},{"path":"http://rladies.org/spellbind/reference/short_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Shorten a URL using the Short.io API — short_url","title":"Shorten a URL using the Short.io API — short_url","text":"short_url sends POST request Short.io API create new shortened URL provided uri. function uses environment variable SHORTIO API key sets specific options API call, allowing duplicate links setting fixed domain shortened URL.","code":""},{"path":"http://rladies.org/spellbind/reference/short_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shorten a URL using the Short.io API — short_url","text":"","code":"short_url(uri)"},{"path":"http://rladies.org/spellbind/reference/short_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shorten a URL using the Short.io API — short_url","text":"uri character string. original URL shortened.","code":""},{"path":"http://rladies.org/spellbind/reference/short_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shorten a URL using the Short.io API — short_url","text":"character string. shortened URL returned Short.io API.","code":""},{"path":"http://rladies.org/spellbind/reference/short_url.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shorten a URL using the Short.io API — short_url","text":"function takes given URL leverages Short.io API generate shortened version URL using specified custom domain.","code":""},{"path":"http://rladies.org/spellbind/reference/short_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shorten a URL using the Short.io API — short_url","text":"","code":"if (FALSE) { # \\dontrun{   # Example usage to shorten a URL   Sys.setenv(SHORTIO = \"your_api_key_here\") # Set API key in environment   short_url(\"https://www.example.com/very-long-url\") } # }"},{"path":"http://rladies.org/spellbind/reference/strlength.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Number of Characters in a String — strlength","title":"Compute the Number of Characters in a String — strlength","text":"strlength splits input string individual characters counts using strsplit length. equivalent determining string length.","code":""},{"path":"http://rladies.org/spellbind/reference/strlength.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Number of Characters in a String — strlength","text":"","code":"strlength(x)"},{"path":"http://rladies.org/spellbind/reference/strlength.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Number of Characters in a String — strlength","text":"x character string. input string whose length calculated.","code":""},{"path":"http://rladies.org/spellbind/reference/strlength.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Number of Characters in a String — strlength","text":"integer. total number characters input string.","code":""},{"path":"http://rladies.org/spellbind/reference/strlength.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the Number of Characters in a String — strlength","text":"function calculates total number characters given string.","code":""},{"path":"http://rladies.org/spellbind/reference/strlength.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Number of Characters in a String — strlength","text":"","code":"# Example usage: strlength(\"hello\")        # Returns: 5 #> [1] 5 strlength(\"R is great!\")  # Returns: 11 #> [1] 11"},{"path":"http://rladies.org/spellbind/reference/tags2hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts tags into a hash-tagged string — tags2hash","title":"Converts tags into a hash-tagged string — tags2hash","text":"Converts tags hash-tagged string","code":""},{"path":"http://rladies.org/spellbind/reference/tags2hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts tags into a hash-tagged string — tags2hash","text":"","code":"tags2hash(tags)"},{"path":"http://rladies.org/spellbind/reference/tags2hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts tags into a hash-tagged string — tags2hash","text":"tags character vector tags (e.g., c(\"R\", \"Health data\")).","code":""},{"path":"http://rladies.org/spellbind/reference/tags2hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts tags into a hash-tagged string — tags2hash","text":"single string tags converted hash-tagged format (e.g., \"#Rstats #HealthData\"). Specific transformation applied: - Converts \"r\" (case insensitive) \"rstats\". - Removes spaces within tags. - Collapses elements one space-separated string.","code":""}]
